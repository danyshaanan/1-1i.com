<!DOCTYPE html>
<html lang=en>
<head>
<title>Dany Shaanan - Lorenz Attractor</title>
<meta http-equiv='Content-Type' content='text/html; charset=utf-8' />
<meta name='googlebot' content='noarchive' />
<meta name='robots'    content='noarchive, nosnippet' />
<meta name='description' content='Lorenz Attractor in JavaScript on Canvas' />

<style>
body { width: 100%; text-align: center; }
</style>

<script>
'use strict'

function Lorentz() {
  this.p = 28
  this.o = 10
  this.b = 8/3
  this.v = { x: 1, y: 1, z: 1 }
  // this.min = { x:  Infinity, y:  Infinity, z:  Infinity }
  // this.max = { x: -Infinity, y: -Infinity, z: -Infinity }
  this.min = { x: -18.03532012872487, y: -24.144398108726076, z: 0.9606494672595716 }
  this.max = { x:  19.72132777667416, y:  27.351621650822537, z: 48.336615341218184 }
}

Lorentz.prototype.iterate = function(step) {
  this.v = {
    x: this.v.x + (this.o * (this.v.y - this.v.x)) * step,
    y: this.v.y + (this.v.x * (this.p - this.v.z) - this.v.y) * step,
    z: this.v.z + (this.v.x * this.v.y - this.b * this.v.z) * step
  }
  // ;['x','y','z'].forEach(function(c) {
  //   ['min','max'].forEach(function(f) {
  //     this[f][c] = Math[f](this[f][c], this.v[c])
  //   }.bind(this))
  // }.bind(this))
  return this.v
}

function createLinear(x1, x2, y1, y2) {
  var m = ((y2 - y1)/(x2 - x1))
  return function(value) {
    return parseInt((value - x1)*m + y1)
  }
}

function drawPixel(canvas, ctx, x, y) {
  var pixelsPerUnit = 14
  ctx.fillRect(canvas.width/2 - y*pixelsPerUnit + 40, x*pixelsPerUnit + 340 + canvas.height/2, 1, 1)
}

function project(canvas, ctx, p) {
  drawPixel(canvas, ctx, p.x*Math.sin(Math.PI) + p.z*Math.cos(Math.PI), p.y)
}

var canvas
var ctx
var body
var span
var colors = true
var lorentz = new Lorentz()
var tPerPoint = 0.0012
var pointsPerFrame = 15
var frames = 2000
var linears = ['x','y','z'].map(function(c) {
  return createLinear(lorentz.min[c], lorentz.max[c], 200, 255)
})

window.onclick = function() {
  if (!(colors ^= true)) body.setAttribute('style', 'background-color: white;')
  span.html('')
}

function draw() {
  for (var i=0; i<pointsPerFrame; i++) project(canvas, ctx, lorentz.iterate(tPerPoint))
  if (colors) body.setAttribute('style', 'background-color: rgb(' + ['x','y','z'].map(function(c, i) { return linears[i](lorentz.v[c]) }) + ')')
  if (--frames < 0) return
  window.requestAnimationFrame(draw)
}

window.onload = function() {
  canvas = document.querySelector('canvas')
  ctx = canvas.getContext('2d')
  body = document.querySelector('body')
  span = document.querySelector('span')
  draw()
}

</script>

</head>
<body>

<span>Click anywhere to toggle the background colors</span><br />
<canvas width=800 height=800></canvas>

<script>
  (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
  (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
  m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
  })(window,document,'script','//www.google-analytics.com/analytics.js','ga');
  ga('create', 'UA-38734863-1', 'auto');
  ga('send', 'pageview');
</script>

</body>
</html>
